@model WebApp.Models.LoginRegisterViewModel
<link href="~/Content/css/pnotify.css" rel="stylesheet" />
<script src="https://code.jquery.com/jquery-1.12.3.min.js" integrity="sha256-aaODHAgvwQW1bFOGXMeX+pC4PZIPsvn2h1sArYOhgXQ=" crossorigin="anonymous"></script>
<script src="~/Scripts/pnotify.js"></script>
<script src="@Url.Content("~/Scripts/jquery.signalR-2.2.1.min.js")"></script>

@{
    ViewBag.Title = "Log in";
    Layout = "~/Views/Shared/_AccountsLayout.cshtml";
    ViewBag.IsPatient = false;
}
<style>   
    .login_content form {
     margin: 0px !important; }
     .login_content form input[type="text"], .login_content form input[type="password"] {
        margin: 0 0 12px!important;
     }
     .login_content {
        padding: 0 20px!important;
}
.separator {
    padding-top: 0px!important;
}
.btn-change-pwd, .btn-signin {
            background: linear-gradient(to right, #6d12ba, #c785ff)!important;
            color: #ffffff !important;
            border-radius: 0;
            border: transparent;
        }
        
 body {
            background-image: url('../../Content/images/tm-login-page.png')!important;
            height: 100%;
            background-position: center;
            background-repeat: no-repeat;
            background-size: cover;
        }


        .advertise_form {
            background-color: #fff !important;
            border-radius: 4px;
            width: 100%;
            max-width: 680px;
            height: 350px;
            margin: 200px 0 0 156px;
            position: relative;
            z-index: 1;
}
   
   .head-style{
 background: linear-gradient(to right, #6d12ba, #fff)!important;
 border-radius: 4px;
   }   
</style>

<div class="row" style="width:100%;">
    <div class="col-md-8">
         <div class="advertise_form">
            <button type="button" class="close" data-dismiss="modal">&times;</button>
            <div class="container">
                <h2>Advertisement</h2>
                <img src="~/Content/images/2.jpg" style="width:100%; height: 310px;" />
            </div>   
        </div>
    </div>
    <div class="col-md-4">
        <script>
    @if (ViewBag.ModelError != null)
{
         @: new PNotify({ title: 'Error', text: "@ViewBag.ModelError", type: 'error', styling: 'bootstrap3' });
        }
</script>
<a class="hiddenanchor" id="signup"></a>
<a class="hiddenanchor" id="signin"></a>







<div class="login_wrapper">

    <div class="animate form login_form">
        <section id="loginForm" class="login_content">

            @using (Html.BeginForm("PatientLogin", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
            <div class="row" style="margin-left: -20px; margin-bottom: 12px;">
                <div class="col-md-12 head-style">
                    <div class="col-md-6">
                        <h4 style="float:left; color: #fff; margin-top: 17px;">Enter Clinic</h4>
                    </div>
                     <div class="col-md-6">
                         <img src="~/Content/images/Logos.png" style="width: 72%; margin-left: 62px;" />
                     </div>
                </div>
            </div>
                @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })*@
                <div>
                    @Html.ValidationMessageFor(m => m.LoginViewModel.Email, "", new { @class = "text-danger" })
                </div>
                <div>
                    @Html.TextBoxFor(m => m.LoginViewModel.Email, new { @class = "form-control", @placeholder = "Email Address" })

                </div>
                <div>
                    @Html.ValidationMessageFor(m => m.LoginViewModel.Password, "", new { @class = "text-danger" })
                </div>
                <div>
                    @Html.PasswordFor(m => m.LoginViewModel.Password, new { @class = "form-control", @placeholder = "Password" })

                </div>
                @*<div>
                        @Html.CheckBoxFor(m => m.LoginViewModel.RememberMe)
                        @Html.LabelFor(m => m.LoginViewModel.RememberMe)
                    </div>*@


                <div>
                    <input type="submit" value="Enter Clinic" class="btn btn-signin submit" style="margin-right: 39%;" />
                    @Html.ActionLink("Lost your password?", "ForgotPassword")
                </div>

                <div class="clearfix"></div>
                <div class="separator">
                    <p class="change_link" style="margin: 0 0 0px;">
                        <img style="width:11em ;" src="~/Content/images/logo.png" />
                        <a href="#signup" class="to_register" onclick="resetvalidation()"> New Patient Sign up </a>
                       
                     </p>
                    <div class="clearfix">

                    </div>
                </div>

            }


        </section>
    </div>

    <div id="register" class="animate form registration_form" style="right:500px;">
        <section class="login_content">

            <img src="~/Content/images/Logos.png" />
            @using (Html.BeginForm("Signup", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <h1>Register With Clinic</h1>
                @*@Html.ValidationSummary("", new { @class = "text-danger" })*@
                <script>
                      @if (ViewBag.error != null)
                      {
                        @: new PNotify({ title: 'Error', text: "@ViewBag.error", type: 'error', styling: 'bootstrap3' });
                                         }
                    @if (ViewBag.SuccessMessage != null)
                       {
                           @: new PNotify({ title: 'Success', text: "@ViewBag.SuccessMessage", type: 'success', styling: 'bootstrap3' });
                                           }
                </script>
                @*<div>
                       <span class = "text-danger">@ViewBag.error</span>
                    </div>*@
                
                <div>
                    @Html.ValidationMessageFor(m => m.RegisterViewModel.FirstName, "", new { @class = "text-danger" })
                </div>
                <div>
                    @Html.TextBoxFor(m => m.RegisterViewModel.FirstName, new { @class = "form-control", @placeholder = "First Name" })
                </div>
                <div>
                    @Html.ValidationMessageFor(m => m.RegisterViewModel.LastName, "", new { @class = "text-danger" })
                </div>
                <div>
                    @Html.TextBoxFor(m => m.RegisterViewModel.LastName, new { @class = "form-control", @placeholder = "Last Name" })
                </div>
                <div>
                    @Html.ValidationMessageFor(m => m.RegisterViewModel.Email, "", new { @class = "text-danger" })
                </div>
                <div>
                    @Html.TextBoxFor(m => m.RegisterViewModel.Email, new { @class = "form-control", @placeholder = "Email Address" })
                </div>
                <div>
                    @Html.ValidationMessageFor(m => m.RegisterViewModel.Password, "", new { @class = "text-danger" })
                </div>
                <div>
                    @Html.PasswordFor(m => m.RegisterViewModel.Password, new { @class = "form-control", @placeholder = "Password" })
                </div>
                <div>
                    @Html.ValidationMessageFor(m => m.RegisterViewModel.ConfirmPassword, "", new { @class = "text-danger" })
                </div>
                <div>
                    @Html.PasswordFor(m => m.RegisterViewModel.ConfirmPassword, new { @class = "form-control", @placeholder = "Confirm Password" })
                </div>
                <div>
                    @Html.ValidationMessageFor(m => m.RegisterViewModel.LocationId, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <div class="">
                       @* @Html.DropDownListFor(x => x.RegisterViewModel.LocationName, (List<SelectListItem>)ViewBag.location, "Select Location", new { @class = "form-control",@onchange = "FillDoctor()" })*@
                        @Html.DropDownListFor(m => m.RegisterViewModel.LocationName,
                    new SelectList(ViewBag.location, "zip", "zip"),
                    "Hersteller", new { @class = "form-control", @onchange = "GetDoctors()",@Id="Location" })
                     </div>
                </div>
                <div>
                    @Html.ValidationMessageFor(m => m.RegisterViewModel.DoctorId, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <div class="">
                        @*@Html.DropDownListFor(x => x.RegisterViewModel.DoctorId, (List<SelectListItem>)ViewBag.drpdnlist, "Select Physician", new { @class = "form-control" })*@
                        @Html.DropDownListFor(m => m.RegisterViewModel.DoctorId, new SelectList(Enumerable.Empty<SelectListItem>(), "doctorID", "firstName"), "Select Physician", new { @class = "form-control", @Id = "Doctor" })
                      </div>
                </div>

                <div>
                    @Html.ValidationMessageFor(m => m.RegisterViewModel.PaymentId, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <div class="">
                        @Html.DropDownListFor(x => x.RegisterViewModel.PaymentId, (List<SelectListItem>)ViewBag.payment, "Select Payment", new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="">
                        @Html.DropDownListFor(x => x.RegisterViewModel.ReminderId, new SelectList(new List<SelectListItem> {
                             new SelectListItem { Text = "Email", Value = "1"},
                             new SelectListItem { Text = "SMS", Value = "2"}
                         }, "Value", "Text"),
                            "Select Reminder Type",
                     new { @class = "form-control" })
                    </div>
                </div>
                <br>
                <div>
                    <input type="submit" class="btn btn-primary submit" value="Submit" />
                   @* <img style="width:13em;float:right" src="~/Content/images/logo.png" />*@
                </div>
                        @*<div>
                                @Html.CheckBoxFor(m => m.IsPatient, new { @onChange = "chkChange()", @id = "chkIsPatient" })
                                <label for="chkIsPatient" id="lblIsPatient">Register as a Patient</label>
                            </div>*@

                        <div class="clearfix"></div>
                        <div class="separator">
                            <p class="change_link">
                                <img style="width:11em ;" src="~/Content/images/logo.png" />
                                <a href="#signin" class="to_register" onclick="resetvalidation()"> Log in </a>
                            </p>
                            <br>
                            <div class="clearfix"></div>
                        </div>

            }


        </section>
    </div>
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script language="javascript">

    function resetvalidation() {

        $('.validation-summary-errors li').remove();

    }
    function chkChange() {
        if ($("#chkIsPatient").prop("checked")) {
            $("label[id$='lblIsPatient']").html("Register as a Patient");
        } else {
            $("label[id$='lblIsPatient']").html("Register as a Doctor");
        }
    }
    function GetDoctors() {
        var DoctorZip = $('#Location').val();
        $.ajax({
            url:'@Url.Action("GetDoctorsFill", "Account")',
            type: "GET",
            dataType: "json",
            data: { 'zip': DoctorZip },
            success: function (doctors) {                
                $("#Doctor").html(""); // clear before appending new list
                $.each(doctors, function (i, doctors) {
                    $("#Doctor").append(
                        $('<option></option>').val(doctors.doctorID).html(doctors.firstName));
                });
            },            
                error: function (err) {                 
                    new PNotify({ title: 'Error', text: err.statusText, type: 'error', styling: 'bootstrap3' });
                    //Stop displaying loader
                }

        });
    }
  
</script>

    </div>
</div>




